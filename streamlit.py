from email.policy import default
import streamlit as st
import pandas as pd
import plotly.express as px



read_col = ['AÃ‘O','DEPARTAMENTO','MUNICIPIO','APROBACIÃ“N', 'APROBACIÃ“N_TRANSICIÃ“N', 'APROBACIÃ“N_PRIMARIA', 'APROBACIÃ“N_SECUNDARIA', 'APROBACIÃ“N_MEDIA']
df = pd.read_csv("D:\Diplomado/MEN_ESTADISTICAS_EN_EDUCACION_EN_PREESCOLAR__B_SICA_Y_MEDIA_POR_MUNICIPIO_LIMPIO.csv" , usecols=read_col)  

# Using object notation
genre_bar = st.sidebar.radio(
            "Navigate",
            ('Homepage','Exploracion'))

if genre_bar == 'Homepage':
    st.title("EstadÃ­sticas de aprobaciÃ³n escolar ðŸ“Š (DASHBOARD) ðŸ“Š" ) 
    st.write('ðŸ“Œ ABOUT US')
    st.write('Este DASHBOARD fue elaborado con fines acadÃ©micos, con el propÃ³sito de mostrar cual es la tasa de aprobaciÃ³n escolar en todos los departamentos de Colombia. Nuestro equipo estÃ¡ conformado por: Juan Ramos, JeremÃ­as Palacio, JesÃºs Hoyos, Camilo Ganem y Yesica Durango')
    agree = st.checkbox('Display Data')

    if agree:
        st.dataframe(df)
    agree_columns = st.checkbox('Columns')
    if agree_columns:
        st.write(df.columns)

    genre = st.radio(
        "Â¿QuÃ© dimensiÃ³n quieres ver?",
        ('Row', 'Colomns'))

    if genre == 'Row':
        st.write('Cantidad de filas del Dataframe')
        st.write(df.shape[0])
    else:
        st.write('Cantidad de columnas del Dataframe')
        st.write(df.shape[1])

    agree_describe = st.checkbox('ðŸ“ˆ EstadÃ­sticas Generales ðŸ“ˆ')
    if agree_describe: 
        st.write(df.describe())

else:

    st.sidebar.header('Ingrese los datos')
    DEPARTAMENTO = st.sidebar.multiselect("Selecciona departamento:", options=df['DEPARTAMENTO'].unique() , default =df['DEPARTAMENTO'].unique() )
    df_selection = df.query("DEPARTAMENTO == @DEPARTAMENTO")

    # st.dataframe(df_selection)
    st.title("Hello world!") 

    dataframe_depatamento = (
    df_selection.loc[:,['DEPARTAMENTO','APROBACIÃ“N']].groupby('DEPARTAMENTO').mean('APROBACIÃ“N')
    )

    fig = px.bar(
        dataframe_depatamento,
        x = "APROBACIÃ“N",
        y = dataframe_depatamento.index,
        orientation = "h",
        title= "<b> Hola </b>",
        color_discrete_sequence = ["#0083BB"] * len(dataframe_depatamento),
        template = "plotly_white"
    )

    fig.update_layout(
        plot_bgcolor="rgba(0,0,0,0)",
        xaxis = (dict(showgrid=False))
    )

    AÃ‘O = st.sidebar.multiselect("Selecciona los aÃ±os:", options=df['AÃ‘O'].unique() , default =df['AÃ‘O'].unique() )
    df_selection_aÃ±o = df.query("AÃ‘O == @AÃ‘O")

    dataframe_aÃ±o = (
        df_selection_aÃ±o.loc[:,['AÃ‘O','APROBACIÃ“N']].groupby('AÃ‘O').mean('APROBACIÃ“N')
        )

    fig_2 = px.line(
        dataframe_aÃ±o,
        x = dataframe_aÃ±o.index,
        y = "APROBACIÃ“N"
    )



    st.plotly_chart(fig)
    st.plotly_chart(fig_2)

    st.sidebar.title('ðŸ“© Contact us')

























# option = st.sidebar.selectbox(
#      'Elija un departamento',
#      ('Amazonas', 'Antioquia', 'Arauca', 'Atlantico', 'Bogota DC', 'Bolivar', 'Boyaca', 
#      'Caldas', 'CaquetÃ¡', 'Casanare', 'Cauca', 'Cesar', 'Choco', 'Cordoba', 'Cundinamarca', 'Guainia', 
#      'Guaviare', 'Huila', 'La Guajira', 'Magdalena', 'Meta', 'NariÃ±o', 'Norte de Santander', 'Putumayo', 
#      'Quindio', 'Risaralda', 'San Andres y Providencia', 'Santander', 'Sucre', 'Tolima', 'Valle del Cauca',
#      'VaupÃ©s', 'Vichada'))

#     selected_year = st.sidebar.selectbox('AÃ‘O', list(reversed(range(2011,2025))))