# -*- coding: utf-8 -*-
"""api.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cZrM_fLaUN6s0FyL-Ets1kGUj0a_7qbr
"""

!pip install FastAPI -q

!cp /content/drive/MyDrive/Colab\ Notebooks/clases.py /content

from fastapi import FastAPI
from typing import List
from clases import OutputModelo, InputModelo, APIModelBackEnd

"""API para el diplomado de Python"""

from fastapi import FastAPI
from typing import List
from clases import OutputModelo, InputModelo, APIModelBackEnd

# Creamos el objeto app
app = FastAPI(title="API de Machine Learning del Diplomado", version="1.0.0")
"""Objeto FastAPI usado para el deployment de la API :)"""
# Con el decorador, ponemos en el endpoint /predict la funcionalidad de la función predict_proba
# response_model=List[OutputModelo] es que puede responder una lista de instancias válidas de ModelOutput
# En la definición, le decimos que los Inputs son una lista de ModelInput.
# Así, la API recibe para hacer multiples predicciones


@app.post("/predict", response_model=List[OutputModelo])
async def predict_proba(inputs: List[InputModelo]):
    """Endpoint de predicción de la API"""
    # Creamos una lista vacía con las respuestas
    response = list()
    # Iteramos por todas las entradas que damos
    for Input in inputs:
        # Usamos nuestra Clase en el backend para predecir con nuestros inputs.
        # Esta sería la línea que cambiamos en este archivo, podemos los inputs que necesitemos.
        # Esto es, poner Input.Nombre_Atributo
        model = APIModelBackEnd(
            Input.tipo_aprobacion, Input.years
        )
        response.append(model.predecir()[0])
    # Retorna  la lista con todas las predicciones hechas.
    return response